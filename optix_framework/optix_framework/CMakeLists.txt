set(HEADERS_IMGUI
imgui/imconfig.h
imgui/imgui.h
imgui/imgui_impl_glfw_gl3.h
imgui/imgui_internal.h
imgui/stb_rect_pack.h
imgui/stb_textedit.h
imgui/stb_truetype.h
)

set(HEADERS
        ambient_occlusion.h
    apple_juice.h
    approximate_dipoles_host.h
        approximate_dipoles_device.h
        light_common.h
    box.h
        brdf_device.h
        merl_utils.h
        bssrdf_device.h
    bssrdf_host.h
        bssrdf_common.h
        bssrdf_debug_visualizer_shader.h
        camera_common.h
    camera_host.h
    chull.h
        color_map_utils.h
        color_utils.h
    constant_background.h
        cpu_timer.h
    default_shader.h
        device_common.h
        environment_map_device.h
        mesh_device.h
        file_dialogs.h
        directional_dipole_device.h
        double_support_optix.h
        environment_map.h
    environment_map_background.h
    folders.h
        forward_dipole_device.h
    forward_dipole_defines.h
    forward_dipole_host.h
    forward_dipole_sampling.h
    forward_dipole_test.h
    forward_dipole_tom748.h
    forward_dipole_truncnorm.h
    forward_dipole_utils.h
    glfw_display.h
    glm.h
    brdf_shader.h
    host_device_common.h
        material_host.h
    image_loader.h
    image_exporter.h
    immediate_gui.h
        intersection_refinement.h
        light_device.h
    light_host.h
    logger.h
        material_common.h
    material_device.h
    material_library.h
        math_utils.h
    md5.h
    merl_common.h
        mesh_host.h
    miss_program.h
    mouse.h
    neural_network_sampler.h
        neural_network_sampler_device.h
    obj_loader.h
        ray_workbench.h
        optics_utils.h
        optix_device_utils.h
        optix_serialize_utils.h
        optix_host_utils.h
        parsing_utils.h
    path_tracing.h
    perlin_noise.h
        phase_function_device.h
        photon_beam_diffusion_device.h
    plint.h
        presampled_surface_bssrdf_shader.h
        quantized_diffusion_device.h
    quantized_diffusion_helpers.h
    quantized_diffusion_host.h
        random_device.h
    raw_loader.h
        ray_tracing_utils.h
    rendering_method.h
    render_task.h
        sampled_bssrdf_shader.h
        sampler_device.h
    sample_scene.h
    sampling_helpers.h
    scattering_material.h
    scattering_properties.h
    shader.h
    shader_factory.h
    simplex_noise.h
    simple_tracing.h
        sky_model.h
    sphere.h
        standard_dipole_device.h
        string_utils.h
        structs.h
    transform.h
    volume_path_tracer.h
    bssrdf_loader.h
    bssrdf_parameter_manager.h
    empirical_bssrdf_device.h
    empirical_bssrdf_host.h
    empirical_bssrdf_common.h
        improved_enum.inc
    volume_path_tracing_common.h 
    subsurface_scattering_sampled_common.h
    subsurface_scattering_sampled.h
        hemisphere_partition_utils.h
    xml_archive.hpp  
    object_host.h  
    scene.h  
    texture.h  
    scene_gui.h  
    brdf_host.h
        brdf_common.h
    geometry.h  
    thumbnail.h
        microfacet_utils.h
    default_shader_common.h
    brdf_ridged_qr_host.h
    brdf_ridged_qr_device.h
    merl_host.h
)

set(SRCS_IMGUI
    imgui/imgui.cpp
    imgui/imgui_demo.cpp
    imgui/imgui_draw.cpp
    imgui/imgui_impl_glfw_gl3.cpp
)

set(SRCS
    bssrdf_loader.cpp
    bssrdf_parameter_manager.cpp
    ambient_occlusion.cpp
    apple_juice.cpp
    approximate_dipoles_host.cpp
    box.cpp
    merl_utils.cpp
    bssrdf_host.cpp
    bssrdf_debug_visualizer_shader.cpp
    camera_host.cpp
    chull.cpp
    constant_background.cpp
    cpu_timer.cpp
    default_shader.cpp
    file_dialogs.cpp
    environment_map_background.cpp
    empirical_bssrdf_host.cpp
    folders.cpp
    forward_dipole_host.cpp
    forward_dipole_test.cpp
    glfw_display.cpp
    glm.cpp
    brdf_shader.cpp
    material_host.cpp
    image_loader.cpp
    image_exporter.cpp
    immediate_gui.cpp
    light_host.cpp
    logger.cpp
    material_library.cpp
    mesh_host.cpp
    miss_program.cpp
    mouse.cpp
    neural_network_sampler.cpp
    obj_loader.cpp
    ray_workbench.cpp
    path_tracing.cpp
    perlin_noise.cpp
    plint.cpp
    presampled_surface_bssrdf_shader.cpp
    quantized_diffusion_host.cpp
    raw_loader.cpp
    render_task.cpp
    sampled_bssrdf_shader.cpp
    sample_scene.cpp
    scattering_material.cpp
    shader.cpp
    shader_factory.cpp
    simplex_noise.cpp
    simple_tracing.cpp
    sky_model.cpp
    sphere.cpp
    transform.cpp
    object_host.cpp 
    scene.cpp
    scene_gui.cpp
    texture.cpp
    brdf_host.cpp
    geometry.cpp
    thumbnail.cpp
    brdf_ridged_qr_host.cpp
    merl_host.cpp

)

set(CUDA_SOURCES
    CUDA_files/absorbing_glass.cu
    CUDA_files/box.cu
    CUDA_files/bssrdf_plane_visualizer.cu
    CUDA_files/chull.cu
    CUDA_files/constant_background.cu
    CUDA_files/constant_shader.cu
    CUDA_files/util_rays.cu
    CUDA_files/dispersion_shader.cu
    CUDA_files/debug_camera.cu
    CUDA_files/environment_map_background.cu
    CUDA_files/env_cameras.cu
    CUDA_files/glass_shader.cu
    CUDA_files/brdf_shader.cu
    CUDA_files/lambertian_shader.cu
    CUDA_files/metal_shader.cu
    CUDA_files/mirror_shader.cu
    CUDA_files/normal_shader.cu
    CUDA_files/pinhole_camera.cu
    CUDA_files/sample_camera.cu
    CUDA_files/sky_model_background.cu
    CUDA_files/sphere.cu
    CUDA_files/subsurface_scattering_shader.cu
    CUDA_files/subsurface_scattering_sampled_default.cu
    CUDA_files/subsurface_scattering_sampled_neural_network.cu
    CUDA_files/subsurface_scattering_sampled_forward_dipole.cu
    CUDA_files/tonemap_camera.cu
    CUDA_files/triangle_mesh.cu
    CUDA_files/uv_shader.cu
    CUDA_files/volume_shader.cu
    CUDA_files/volume_shader_heterogenous.cu
    CUDA_files/wireframe_shader.cu
 )
    
source_group("Headers" FILES ${HEADERS})
source_group("Source Files" FILES ${SRCS})
source_group("Imgui" FILES ${HEADERS_IMGUI} ${SRCS_IMGUI})

include_directories(${CMAKE_CURRENT_SOURCE_DIR})
generate_ptx(framework ${HEADERS} ${CUDA_SOURCES} ${OPTIONS})

    
add_library( framework STATIC
             ${SRCS} ${HEADERS} ${HEADERS_IMGUI} ${SRCS_IMGUI} ${CUDA_SOURCES} ${generated})

target_link_libraries(framework optprops nfd optix ${CUDA_LIBRARIES} glfw ${GLEW_LIBRARIES} ${OPENGL_LIBRARIES} ${IL_LIBRARIES} ${ILU_LIBRARIES})
target_include_directories( framework PUBLIC ${CMAKE_CURRENT_SOURCE_DIR})
