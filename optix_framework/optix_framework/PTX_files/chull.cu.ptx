//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-19805474
// Cuda compilation tools, release 7.5, V7.5.16
// Based on LLVM 3.4svn
//

.version 4.3
.target sm_20
.address_size 64

	// .globl	_Z12chull_boundsiPf
.global .align 8 .b8 geometric_normal[12];
.global .align 8 .b8 shading_normal[12];
.global .align 8 .b8 texcoord[12];
.global .align 4 .b8 ray[36];
.global .align 8 .b8 chull_bbmin[12];
.global .align 8 .b8 chull_bbmax[12];
.global .align 1 .b8 planes[1];
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 4 .b8 _ZN21rti_internal_typeinfo16geometric_normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14shading_normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8texcoordE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3rayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11chull_bbminE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11chull_bbmaxE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 1 .b8 _ZN21rti_internal_typename16geometric_normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14shading_normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename8texcoordE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3rayE[11] = {111, 112, 116, 105, 120, 58, 58, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_typename11chull_bbminE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename11chull_bbmaxE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum16geometric_normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14shading_normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8texcoordE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3rayE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11chull_bbminE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11chull_bbmaxE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic16geometric_normalE[27] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 103, 101, 111, 109, 101, 116, 114, 105, 99, 95, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic14shading_normalE[25] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 115, 104, 97, 100, 105, 110, 103, 95, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic8texcoordE[19] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 116, 101, 120, 99, 111, 111, 114, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic3rayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic11chull_bbminE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11chull_bbmaxE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation16geometric_normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14shading_normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8texcoordE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3rayE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11chull_bbminE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11chull_bbmaxE[1];

.visible .entry _Z12chull_boundsiPf(
	.param .u32 _Z12chull_boundsiPf_param_0,
	.param .u64 _Z12chull_boundsiPf_param_1
)
{
	.reg .f32 	%f<11>;
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [_Z12chull_boundsiPf_param_1];
	cvta.to.global.u64 	%rd2, %rd1;
	ld.global.v2.f32 	{%f1, %f2}, [chull_bbmin];
	ld.global.f32 	%f5, [chull_bbmin+8];
	st.global.f32 	[%rd2+8], %f5;
	st.global.f32 	[%rd2+4], %f2;
	st.global.f32 	[%rd2], %f1;
	ld.global.v2.f32 	{%f6, %f7}, [chull_bbmax];
	ld.global.f32 	%f10, [chull_bbmax+8];
	st.global.f32 	[%rd2+20], %f10;
	st.global.f32 	[%rd2+16], %f7;
	st.global.f32 	[%rd2+12], %f6;
	ret;
}

	// .globl	_Z15chull_intersecti
.visible .entry _Z15chull_intersecti(
	.param .u32 _Z15chull_intersecti_param_0
)
{
	.reg .pred 	%p<11>;
	.reg .f32 	%f<139>;
	.reg .b32 	%r<16>;
	.reg .b64 	%rd<14>;


	mov.u64 	%rd6, planes;
	cvta.global.u64 	%rd5, %rd6;
	mov.u32 	%r4, 1;
	mov.u32 	%r5, 16;
	// inline asm
	call (%rd1, %rd2, %rd3, %rd4), _rt_buffer_get_size_64, (%rd5, %r4, %r5);
	// inline asm
	cvt.u32.u64	%r1, %rd1;
	mov.f32 	%f96, 0f00000000;
	mov.f32 	%f119, %f96;
	mov.f32 	%f111, %f96;
	mov.f32 	%f103, %f96;
	mov.f32 	%f95, %f96;
	mov.f32 	%f87, %f96;
	mov.f32 	%f79, %f96;
	mov.f32 	%f120, %f96;
	mov.f32 	%f112, %f96;
	mov.f32 	%f104, %f96;
	mov.f32 	%f88, %f96;
	mov.f32 	%f80, %f96;
	mov.f32 	%f133, 0fFF7FFFFF;
	mov.f32 	%f134, 0f7F7FFFFF;
	mov.f32 	%f137, %f133;
	mov.f32 	%f135, %f134;
	mov.u32 	%r15, 0;
	setp.lt.s32	%p1, %r1, 1;
	@%p1 bra 	BB1_7;

BB1_1:
	mov.f32 	%f128, %f137;
	mov.f32 	%f123, %f135;
	mov.f32 	%f138, %f128;
	mov.f32 	%f7, %f123;
	mov.f32 	%f114, %f120;
	mov.f32 	%f121, %f114;
	mov.f32 	%f106, %f112;
	mov.f32 	%f113, %f106;
	mov.f32 	%f98, %f104;
	mov.f32 	%f105, %f98;
	mov.f32 	%f90, %f96;
	mov.f32 	%f3, %f90;
	mov.f32 	%f82, %f88;
	mov.f32 	%f2, %f82;
	mov.f32 	%f74, %f80;
	mov.f32 	%f1, %f74;
	cvt.s64.s32	%rd9, %r15;
	mov.u64 	%rd12, 0;
	// inline asm
	call (%rd7), _rt_buffer_get_64, (%rd5, %r4, %r5, %rd9, %rd12, %rd12, %rd12);
	// inline asm
	ld.global.f32 	%f52, [ray+12];
	ld.v4.f32 	{%f53, %f54, %f55, %f56}, [%rd7];
	ld.global.f32 	%f57, [ray+16];
	mul.f32 	%f58, %f54, %f57;
	fma.rn.f32 	%f59, %f53, %f52, %f58;
	ld.global.f32 	%f60, [ray+20];
	fma.rn.f32 	%f61, %f55, %f60, %f59;
	ld.global.f32 	%f62, [ray];
	ld.global.f32 	%f63, [ray+4];
	mul.f32 	%f64, %f54, %f63;
	fma.rn.f32 	%f65, %f53, %f62, %f64;
	ld.global.f32 	%f66, [ray+8];
	fma.rn.f32 	%f67, %f55, %f66, %f65;
	add.f32 	%f68, %f56, %f67;
	neg.f32 	%f69, %f68;
	div.rn.f32 	%f13, %f69, %f61;
	setp.lt.f32	%p2, %f61, 0f00000000;
	@%p2 bra 	BB1_4;
	bra.uni 	BB1_2;

BB1_4:
	setp.leu.f32	%p4, %f13, %f138;
	mov.f32 	%f75, %f1;
	mov.f32 	%f81, %f75;
	mov.f32 	%f83, %f2;
	mov.f32 	%f89, %f83;
	mov.f32 	%f91, %f3;
	mov.f32 	%f97, %f91;
	mov.f32 	%f124, %f7;
	mov.f32 	%f136, %f124;
	@%p4 bra 	BB1_6;

	mov.f32 	%f105, %f53;
	mov.f32 	%f113, %f54;
	mov.f32 	%f121, %f55;
	mov.f32 	%f81, %f1;
	mov.f32 	%f89, %f2;
	mov.f32 	%f97, %f3;
	mov.f32 	%f138, %f13;
	mov.f32 	%f136, %f7;
	bra.uni 	BB1_6;

BB1_2:
	setp.geu.f32	%p3, %f13, %f7;
	mov.f32 	%f81, %f1;
	mov.f32 	%f89, %f2;
	mov.f32 	%f97, %f3;
	mov.f32 	%f136, %f7;
	@%p3 bra 	BB1_6;

	mov.f32 	%f81, %f53;
	mov.f32 	%f89, %f54;
	mov.f32 	%f97, %f55;
	mov.f32 	%f136, %f13;

BB1_6:
	mov.f32 	%f137, %f138;
	mov.f32 	%f135, %f136;
	mov.f32 	%f120, %f121;
	mov.f32 	%f112, %f113;
	mov.f32 	%f104, %f105;
	mov.f32 	%f96, %f97;
	mov.f32 	%f88, %f89;
	mov.f32 	%f80, %f81;
	add.s32 	%r15, %r15, 1;
	setp.lt.s32	%p5, %r15, %r1;
	setp.lt.f32	%p6, %f137, %f135;
	and.pred  	%p7, %p5, %p6;
	mov.f32 	%f79, %f80;
	mov.f32 	%f87, %f88;
	mov.f32 	%f95, %f96;
	mov.f32 	%f103, %f104;
	mov.f32 	%f111, %f112;
	mov.f32 	%f119, %f120;
	mov.f32 	%f134, %f135;
	mov.f32 	%f133, %f137;
	@%p7 bra 	BB1_1;

BB1_7:
	setp.gt.f32	%p8, %f133, %f134;
	@%p8 bra 	BB1_12;

	// inline asm
	call (%r9), _rt_potential_intersection, (%f133);
	// inline asm
	setp.eq.s32	%p9, %r9, 0;
	@%p9 bra 	BB1_10;

	st.global.v2.f32 	[geometric_normal], {%f103, %f111};
	st.global.f32 	[geometric_normal+8], %f119;
	st.global.v2.f32 	[shading_normal], {%f103, %f111};
	st.global.f32 	[shading_normal+8], %f119;
	mov.u32 	%r11, 0;
	st.global.u32 	[texcoord+8], %r11;
	mov.f32 	%f71, 0f00000000;
	st.global.v2.f32 	[texcoord], {%f71, %f71};
	// inline asm
	call (%r10), _rt_report_intersection, (%r11);
	// inline asm
	bra.uni 	BB1_12;

BB1_10:
	// inline asm
	call (%r12), _rt_potential_intersection, (%f134);
	// inline asm
	setp.eq.s32	%p10, %r12, 0;
	@%p10 bra 	BB1_12;

	st.global.v2.f32 	[geometric_normal], {%f79, %f87};
	st.global.f32 	[geometric_normal+8], %f95;
	st.global.v2.f32 	[shading_normal], {%f79, %f87};
	st.global.f32 	[shading_normal+8], %f95;
	mov.u32 	%r14, 0;
	st.global.u32 	[texcoord+8], %r14;
	mov.f32 	%f73, 0f00000000;
	st.global.v2.f32 	[texcoord], {%f73, %f73};
	// inline asm
	call (%r13), _rt_report_intersection, (%r14);
	// inline asm

BB1_12:
	ret;
}


